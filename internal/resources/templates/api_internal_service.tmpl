// Code generated by github.com/linbaozhong/gentity. DO NOT EDIT.

package app

import (
	"context"
	"github.com/google/uuid"
	"github.com/linbaozhong/gentity/pkg/ace"
	"github.com/linbaozhong/gentity/pkg/ace/dialect"
	"github.com/linbaozhong/gentity/pkg/api"
	"{{.ModulePath}}/internal/constant/err"
	"{{.ModulePath}}/internal/constant/state"
	"{{.ModulePath}}/internal/model/db"
	"{{.ModulePath}}/internal/model/define/dao"
	"{{.ModulePath}}/internal/model/define/table/apptbl"
	"{{.ModulePath}}/internal/model/define/table/usertbl"
	"{{.ModulePath}}/internal/model/dto"
	"{{.ModulePath}}/internal/service"
	"time"
)

func CheckForUpdate(c context.Context, in *dto.CheckVersionReq, out *dto.CheckVersionResp) error {
	ulog := db.NewUserLog()

	if in.Uuid == "" { // 创建新用户
		user := db.NewUser()

		user.Ctime = time.Now()
		user.Uuid = uuid.New().String()
		_, e := dao.User(service.GetDB()).InsertOne(c, user)
		if e != nil {
			return e
		}
		ulog.UserId = user.Id
		//
		out.Uuid = user.Uuid
	} else { // 查询用户
		user, ok, e := dao.User(service.GetDB()).Get4Cols(c, []dialect.Field{usertbl.Id}, usertbl.Uuid.Eq(in.Uuid))
		if e != nil {
			return e
		}
		if !ok {
			return err.ErrUserNotFound.SetInfo("uuid")
		}

		ulog.UserId = user.Id
	}
	if ctx, ok := c.(api.Context); ok {
		ulog.Device = ctx.GetHeader("User-Agent")
		ulog.Ip = ctx.RemoteAddr()
	}

	ulog.LoginTime = time.Now()
	ulog.OsVersion = in.OsVersion
	ulog.Os = in.Os
	ulog.OsArch = in.Arch
	ulog.AppName = in.Name
	ulog.AppVersion = in.Version

	//
	a, e := service.GetDB().Transaction(c, func(tx *ace.Tx) (any, error) {
		app, ok, e := dao.App(tx).Get(c, apptbl.Arch.Eq(in.Arch), apptbl.State.Eq(state.Enabled))
		if e != nil {
			return nil, e
		}
		_, e = dao.UserLog(tx).InsertOne(c, ulog)
		if !ok {
			return nil, err.ErrAppNotFound
		}
		return app, e
	})

	if e != nil {
		return e
	}

	if app, ok := a.(*db.App); ok {
		if app.Version > in.Version {
			out.Version = app.Version
			out.Url = app.Url
			out.ForceUpdate = app.Force
		}
	}

	return nil
}
