// Code generated by github.com/linbaozhong/gentity. DO NOT EDIT.

package dao

import (
	"github.com/linbaozhong/gentity/pkg/ace"
	"github.com/linbaozhong/gentity/pkg/cachego"
)

var (
	Or  = ace.Or
	And = ace.And
)

// 生成综合条件cond缓存key
func GetCondHashKey(key any) string {
	return cachego.GetHashKey("c:", key)
}

// 生成id缓存key
func GetIdHashKey(key any) string {
	return cachego.GetHashKey("i:", key)
}

// 生成ids缓存key
func GetIdsHashKey(key any) string {
	return cachego.GetHashKey("s:", key)
}

// //////////////////////////
func getExec(exec ...ace.Executer) ace.Executer {
	if len(exec) > 0 {
		return exec[0]
	}
	return ace.GetDB()
}

// Create
func Create(exec ...ace.Executer) ace.CreateBuilder {
	return getExec(exec...).Create()
}

// Select
func Select(exec ...ace.Executer) ace.SelectBuilder {
	return getExec(exec...).Select()
}

// Update
func Update(exec ...ace.Executer) ace.UpdateBuilder {
	return getExec(exec...).Update()
}

// Delete
func Delete(exec ...ace.Executer) ace.DeleteBuilder {
	return getExec(exec...).Delete()
}
